predict(m3,nw,type = "response")
m3 <- vglm(cat~trt,data = datos, family = cumulative(link = "logitlink") )
summary(m3)
predict(m3,nw,type = "response")
m3 <- vglm(cat~trt,data = datos, family = cumulative)
summary(m3)
predict(m3,nw,type = "response")
m3 <- vglm(cat~trt,data = datos, family = cumulative(link = "logitlink") )
summary(m3)
predict(m3,nw,type = "response")
?vglm
########################################################################
##############################
##### ANALYSIS OF COVARIANCE
library(lme4)
########################################
########################################
##### Analisis convariance
datos <- read.csv("table4.1.csv",header = TRUE)
setwd("~/Documents/R_statiscs/GLMM_AGRICULTURA")
########################################
########################################
##### Analisis convariance
datos <- read.csv("table4.1.csv",header = TRUE)
head(datos)
setwd("~/Documents/R_statiscs/GLMM_AGRICULTURA/Generalized-Linear-Mixed-Models-with-Applications-in-Agriculture-and-Biology_in-R_")
########################################
########################################
##### Analisis convariance
datos <- read.csv("table4.1.csv",header = TRUE)
head(datos)
########################################
########################################
##### Analisis convariance
datos <- read.csv("table4.1.csv",header = TRUE)
head(datos)
datos_analisis<- datos %>%
mutate(xbar= Total.no..of.flowers-mean(Total.no..of.flowers)) %>%
# mutate(Population=as.factor(Population)) %>%
rename(plants=Total.no..of.flowers)
str(datos_analisis)
model_ovules <- lmer(Eggs~Population+xbar+Population*xbar+(1|plants:Population),data = datos_analisis)
summary(model_ovules)
str(datos_analisis)
model_ovules <- lmer(Eggs~Population+xbar+Population*xbar+(1|plants:Population),data = datos_analisis)
summary(model_ovules)
anova(model_ovules,ddf="Satterthwaite")
pigs.emm <- emmeans(model_ovules, "Population", type = "interaction")
pigs.emm
cld(pigs.emm, alpha = 0.05, Letters = LETTERS)
library(multcomp)
cld(pigs.emm, alpha = 0.05, Letters = LETTERS)
model_ovules <- lmer(Eggs~Population+xbar+Population*xbar+(1|Population/plant),data = datos_analisis)
str(datos_analisis)
model_ovules <- lmer(Eggs~Population+xbar+Population*xbar+(1|Population/Plant),data = datos_analisis)
model_ovules <- lmer(Eggs~Population+xbar+Population*xbar+(1|plants:Population),data = datos_analisis)
summary(model_ovules)
model_ovules <- lmer(Eggs~Population+xbar+Population*xbar+(1|plants/Population),data = datos_analisis)
summary(model_ovules)
model_ovules <- lmer(Eggs~Population+xbar+Population*xbar+(1|plants:Population),data = datos_analisis)
summary(model_ovules)
model_ovules <- lmer(Eggs~Population*xbar+(1|plants:Population),data = datos_analisis)
summary(model_ovules)
anova(model_ovules,ddf="Satterthwaite")
pigs.emm <- emmeans(model_ovules, "Population", type = "interaction")
cld(pigs.emm, alpha = 0.05, Letters = LETTERS)
model_ovules <- lmer(Eggs~Population*xbar+(1|Population/plants),data = datos_analisis)
summary(model_ovules)
datos_analisis
df<- read.csv("table4.1.csv",header = TRUE)
head(datos)
datos<- df %>%
mutate(xbar= Total.no..of.flowers-mean(Total.no..of.flowers)) %>%
# mutate(Population=as.factor(Population)) %>%
rename(plants=Total.no..of.flowers)
datos
head(datos)
model_ovules <- lmer(Eggs~Population*xbar+(1|Population/plants),data = datos_analisis)
summary(model_ovules)
anova(model_ovules,ddf="Satterthwaite")
pigs.emm <- emmeans(model_ovules, "Population", type = "interaction")
pigs.emm
lsmeans_df <- emmeans(model_ovules, "Population", type = "interaction")
datos<- df %>%
mutate(xbar= Total.no..of.flowers-mean(Total.no..of.flowers)) %>%
mutate(Population=as.factor(Population)) %>%
rename(plants=Total.no..of.flowers)
model_ovules <- lmer(Eggs~Population*xbar+(1|Population/plants),data = datos)
summary(model_ovules)
anova(model_ovules,ddf="Satterthwaite")
head(datos)
#### compartion of means
cld(lsmeans_df, alpha = 0.05, Letters = LETTERS)
#### compartion of means
cld(lsmeans_df, alpha = 0.05, Letters = LETTERS)
model_ovules <- lmer(Eggs~Population*xbar+(1|plants/Population),data = datos)
summary(model_ovules)
head(datos)
head(datos)
df<- read.csv("table4.1.csv",header = TRUE)
head(df)
str(datos)
table1.28 <- read.csv("table1.28.csv",header = TRUE)
table1.28<- table1.28 %>% rename_with(~str_replace_all(.,c("[^[:alnum:]]"="",
"X"="",
"1"="",
"2"=""))) %>%
pivot_longer(cols = 2:6, names_to = "Trt",values_to = "growt") %>%
as.data.frame()
modelo_1.28<- lm(growt~Trt,data=table1.28)
anova(modelo_1.28)
lsmeans_1.28<- lsmeans(modelo_1.28,"Trt")
cld(lsmeans_1.28, alpha = 0.05, Letters = LETTERS)
table1.28
####
### modelo yi = means + Trt+ Species+ Trt*Species+error
modelo_1.29 <- lm(growth~Trt*Species,data = table1.29)
#####################################################
###Chapter 2 Generalized Linear Models
####### percentaje of germinated seed
library(tidyverse)
df <- read.csv("table3.2.csv",header = TRUE)
head(df)
####
### modelo yi = means + Trt+ Species+ Trt*Species+error
modelo_1.29 <- lm(growth~Trt*Species,data = table1.29)
modelo_1.29
###
table1.29 <- read.csv("table1.29.csv",header = TRUE)
table1.29<- table1.29 %>%
pivot_longer(cols = 2:5,names_to = "Trt",values_to = "growth") %>%
as.data.frame()
head(table1.29)
df <- read.csv("table3.2.csv",header = TRUE)
head(df)
datos<- df %>% mutate(Tr.=as.factor(Tr.),y2=y/n)
anv <- lm(y~Tr.,data=df_anv)
anv1<- anova(anv)
anv <- lm(y~Tr.,data=datos)
anv1<- anova(anv)
summary(anv)
anv <- lm(y~-1+Tr.,data=datos)
anv1<- anova(anv)
summary(anv)
41.6667+7.33
41.6667+7.3333
### we estimated means foe each trt
t1<-coef(anv)[1]
t2<- coef(anv)[1]+coef(anv)[2]
t3<- coef(anv)[1]+coef(anv)[3]
t1
t2
t3
anv <- lm(y~Tr.,data=datos)
anv1<- anova(anv)
summary(anv)
### we estimated means foe each trt
t1<-coef(anv)[1]
t2<- coef(anv)[1]+coef(anv)[2]
t3<- coef(anv)[1]+coef(anv)[3]
t1
t2
t3
# t1-t2= (n+t1)-(n+t2)= t1-t2
t1-t2
# t1-t2= (n+t1)-(n+t2)= t1-t2
t1-t2
t1-t3
t2-t3
# t1-t2= (n+t1)-(n+t2)= t1-t2
t1-t2
t1-t3
t2-t3
## or
anv2 <- lm(y~1+Tr.,data=df_anv)
summary(anv2)
## or
anv2 <- lm(y~1+Tr.,data= datos)
summary(anv2)
t2-t3
## or
library(sasLM)
library(emmeans)
LSM(y~Tr.,df_anv)
emm1<- emmeans(anv,specs = ~ Tr.)
T1 <- c(1,0,0)
T2 <- c(0,1,0)
contrast(emm1, method = list(T1 - T2) )
T3 <- c(0,0,1)
contrast(emm1, method = list(T2-T3) )
emmeans(anv, specs = pairwise ~ Tr.,
at = list(sub.rate = c("Trt1", "Trt3") ) )
#### using emmeans
emmeans(anv, specs = pairwise ~ Tr.,
at = list(sub.rate = c("Trt1", "Trt3") ) )
germi <- glm(y2~Tr.-1,family = "binomial"(link = "logit"),data = datos)
summary(germi)
summary(germi)
n1_coef <- coef(germi)[1]
n2_coef <- coef(germi)[1]+coef(germi)[2]
n3_coef <- coef(germi)[1]+coef(germi)[3]
n1_coef-n2_coef
glm_coef <- emmeans(germi,"Tr.")
log(1.6)
n1_coef-n2_coef
n1<- c(1,0,0)
n2 <- c(0,1,0)
n3 <- c(0,0,1)
contrast(glm_coef, method = list(n1 - n2),trans = "log")
contrast(glm_coef, method = list(n1 - n3))
contrast(glm_coef, method = list(n2 - n3))
contrast(means, method = contr)
#### using emmeans
emmeans(anv, specs = pairwise ~ Tr.,
at = list(sub.rate = c("Trt1", "Trt3") ) )
germi <- glm(y2~Tr.-1,family = "binomial"(link = "logit"),data = datos)
summary(germi)
n1_coef <- coef(germi)[1]
n2_coef <- coef(germi)[1]+coef(germi)[2]
n3_coef <- coef(germi)[1]+coef(germi)[3]
n1_coef-n2_coef
glm_coef <- emmeans(germi,"Tr.")
glm_coef
germi <- glm(y2~Tr.-1,family = "binomial",data = datos)
summary(germi)
germi <- glm(y2~Tr.,family = "binomial",data = datos)
summary(germi)
######################################################
################ analyze the same data, also using a CRD assuming a binomial
head(df_anv)
######################################################
################ analyze the same data, also using a CRD assuming a binomial
head(datos)
datos<- df %>% mutate(Tr.=as.factor(Tr.),y2=round(y/n,3))
germi <- glm(y2~Tr.,family = "binomial",data = datos)
summary(germi)
datos<- df %>% mutate(Tr.=as.factor(Tr.),y2=(y/n))
######################################################
################ analyze the same data, also using a CRD assuming a binomial
head(datos)
germi <- glm(y2~Tr.,family = "binomial",data = datos)
summary(germi)
n1_coef <- coef(germi)[1]
n2_coef <- coef(germi)[1]+coef(germi)[2]
n3_coef <- coef(germi)[1]+coef(germi)[3]
n1_coef
n2_coef
n3_coef
n1_coef-n2_coef
n1_coef-n2_coef
n2_coef
n3_coef
n1<- c(1,0,0)
n2 <- c(0,1,0)
n3 <- c(0,0,1)
contrast(glm_coef, method = list(n1 - n2),trans = "log")
contrast(glm_coef, method = list(n1 - n3))
contrast(glm_coef, method = list(n2 - n3))
contrast(glm_coef, method = list(n2 - n3))
n1_coef-n2_coef
contrast(glm_coef, method = list(n1 - n2),trans = "log")
##### SAME RESULT THAR BOOK
GLM(y2~Tr.,Data = df_anv,BETA = TRUE,EMEAN = TRUE)
##### SAME RESULT THAR BOOK
GLM(y2~Tr.,Data = datos,BETA = TRUE,EMEAN = TRUE)
odds<- exp(coef(germi))
odds/(1+odds)
odds
odds/(1+odds)
0.1676669/(1+ 0.1676669)
germi
germi <- glm(y2~1-Tr.,family = "binomial",data = datos)
summary(germi)
germi <- glm(y2~1+Tr.,family = "binomial",data = datos)
summary(germi)
n1_coef
odds<- exp(coef(germi))
odds/(1+odds)
summary(germi)
n1_coef <- coef(germi)[1]
n1_coef
n2_coef
n3_coef
n3_coef <- coef(germi)[1]+coef(germi)[3]
n3_coef
1.0075 -0.4984
coef(germi)
odds_1 <- exp(n1_coef)
odds_1/(1+odds_1)
odd_2 <- exp(n2_coef)
odds_2/(1+odds_2)
odd_2 <- exp(n2_coef)
odds_2/(1+odds_2)
odd_2 <- exp(n2_coef)
odd_2/(1+odd_2)
odd_3 <- exp(n3_coef)
odd_3/(1+odd_3)
########################################
## oddsratio
pairs(glm_coef)
emmeans(germi,"Tr.", type ="response")
########################################
## oddsratio
pairs(glm_coef)
########################################
## oddsratio
pairs(glm_coef,type ="response")
########################################
## oddsratio
pairs(glm_coef,type ="response")
########################################
## oddsratio
pairs(glm_coef)
contrast(glm_coef, method = list(n1 - n2),trans = "log")
########################################
## oddsratio
pairs(glm_coef)
emmeans(germi,"Tr.", type ="response")
contrast(glm_coef, method = list(n1 - n3))
trt_lsm<- as.data.frame(emmeans(germi,"Tr.", type = "mu"))
trt_lsm
########################################
## oddsratio
emmeans(germi,"Tr.", type = "mu")
#####################################################
## Trt least square means
trt_lsm<- as.data.frame(emmeans(germi,"Tr.", type = "mu"))
trt_lsm$Estimae <- coef(germi)
contrast(glm_coef, method = list(n1 - n2))
contrast(glm_coef, method = list(n1 - n3))
contrast(glm_coef, method = list(n2 - n3))
##############################################
glm_contr <- emmeans(germi,"Tr.", type ="pass")
regrid(contrast(glm_contr, method = list(n1 - n2), type = "response"))
##### we can convert the rhe estimate to mean
regrid(glm_coef, transform = "response")
emmeans(germi, specs = pairwise ~ Tr.,
at = list(sub.rate = c("Trt1", "Trt3") ) )
########################################
## oddsratio
emmeans(germi,"Tr.", type = "mu")
#####################################################
## Trt least square means
trt_lsm<- as.data.frame(emmeans(germi,"Tr.", type = "mu"))
trt_lsm
##############################################
glm_contr <- emmeans(germi,"Tr.", type ="pass")
regrid(contrast(glm_contr, method = list(n1 - n2), type = "response"))
##############################################
glm_contr <- emmeans(germi,"Tr.", type ="response")
regrid(contrast(glm_contr, method = list(n1 - n2), type = "response"))
##### we can convert the rhe estimate to mean
regrid(glm_coef, transform = "response")
emmeans(germi, specs = pairwise ~ Tr.,
at = list(sub.rate = c("Trt1", "Trt3") ) )
emmeans(germi,"Tr.", type ="response")
emmeans(germi,"Tr.", type = "mu")
contrast(glm_coef, method = list(n1 - n2),trans = "log")
contrast(glm_coef, method = list(n1 - n3))
contrast(glm_coef, method = list(n1 - n3))
contrast(glm_coef, method = list(n2 - n3))
GLM(y2~Tr.,Data = datos,BETA = TRUE,EMEAN = TRUE)
odds_1 <- exp(n1_coef)
odds_1/(1+odds_1)
odd_2 <- exp(n2_coef)
odd_2/(1+odd_2)
odd_3 <- exp(n3_coef)
odd_3/(1+odd_3)
emmeans(germi,"Tr.", type ="response")
emmeans(germi,"Tr.", type = "mu")
emmeans(germi,"Tr.")
c2<- emmeans(germi,"Tr.", type = "mu")
contrast(c2, method = list(n1 - n3))
contrast(c2, method = list(n2 - n3))
#####################################################
## Trt least square means
trt_lsm<- as.data.frame(emmeans(germi,"Tr.", type = "mu"))
trt_lsm
contrast(c2, method = list(n1 - n3))
#####################################################
## Trt least square means
trt_lsm<- as.data.frame(emmeans(germi,"Tr.", type = "mu"))
#####################################################
## Trt least square means
trt_lsm<- as.data.frame(emmeans(germi,"Tr.", type = "response"))
trt_lsm
#####################################################
## Trt least square means
trt_lsm<- as.data.frame(emmeans(germi,"Tr."))
trt_lsm
trt_lsm$Estimae <- coef(germi)
trt_lsm
#####################################################
## Trt least square means
trt_lsm<- as.data.frame(emmeans(germi,"Tr."))
#####################################################
## Trt least square means
emmeans(germi,"Tr.")
##############################################
glm_contr <- emmeans(germi,"Tr.", type ="response")
regrid(contrast(glm_contr, method = list(n1 - n2), type = "response"))
regrid(contrast(glm_contr, method = list(n1 - n2)))
##############################################
glm_contr <- emmeans(germi,"Tr.")
regrid(contrast(glm_contr, method = list(n1 - n2), type = "response"))
regrid(contrast(glm_contr, method = list(n1 - n2)))
contrast(glm_coef, method = list(n1 - n2),trans = "log")
contrast(glm_coef, method = list(n1 - n3))
contrast(glm_coef, method = list(n2 - n3))
regrid(contrast(glm_contr, method = list(n1 - n2)))
##############################################
contrast(glm_coef, method = list(n1 - n2),trans = "log")
contrast(glm_coef, method = list(n1 - n3))
contrast(glm_coef, method = list(n2 - n3))
##### we can convert the rhe estimate to mean
regrid(glm_coef, transform = "response")
emmeans(germi, specs = pairwise ~ Tr.,
at = list(sub.rate = c("Trt1", "Trt3") ) )
###############################################
#Percentage of germinated seeds (Y) out of total seeds (N) in a randomized complete block design
df <- read.csv("tabla.3.8.csv",header = TRUE)
head(df)
df_analisis<- df %>%
rename(trt= Treatment, block=Block,y=Y..no..of.germinated.seeds.,n=N..total.no..of.seeds.) %>%
mutate(trt=as.factor(trt),block=as.factor(block), y2= y/n)
model <- lm (y~ trt+block,data = df_analisis)
summary(model)
coef(model)
lsmeans_model <- emmeans(model,~trt)
t1<- c(1,0,0)
t2 <- c(0,1,0)
t3 <- c(0,0,1)
contrast(lsmeans_model, method = list(t1 - t2),type ="response")
contrast(lsmeans_model, method = list(t1 - t3))
contrast(lsmeans_model, method = list(t2 - t3))
contrast(lsmeans_model, method = list(t1 - t2),type ="response")
lsmeans_model
summary(model)
coef(model)
model <- lm (y~ 1-trt+block,data = df_analisis)
summary(model)
coef(model)
model <- lm (y~trt+block,data = df_analisis)
summary(model)
coef(model)
lsmeans_model <- emmeans(model,~trt)
t1<- c(1,0,0)
t2 <- c(0,1,0)
t3 <- c(0,0,1)
contrast(lsmeans_model, method = list(t1 - t2),type ="response")
contrast(lsmeans_model, method = list(t1 - t3))
contrast(lsmeans_model, method = list(t2 - t3))
###### the same sintaxis like R istimated
ESTM(t(c(0,2,-1,-1,0,0,0)),y~trt+block,df_analisis)
ESTM(t(c(0,-1,2,-1,0,0,0)),y~trt+block,df_analisis)
#contrast 'type 3 trt ss' trt 1 0 -1 0,trt 0 1 -1;
ESTM(t(c(1,0,-1,0,0,0,0)),y~trt+block,df_analisis)
##### using r
means <- emmeans(model , specs = ~ trt)
contr <- list("tr1-tr2 vs tr3" = c(2, -1, -1),
"trt2 vs tr1-tr3" = c(-1, 2, -1))
contrast(means, method = contr)
lsmeans_model
contrast(lsmeans_model, method = list(t1 - t2),type ="response")
contrast(lsmeans_model, method = list(t1 - t3))
contrast(lsmeans_model, method = list(t2 - t3))
###### the same sintaxis like R istimated
ESTM(t(c(0,2,-1,-1,0,0,0)),y~trt+block,df_analisis)
ESTM(t(c(0,-1,2,-1,0,0,0)),y~trt+block,df_analisis)
#contrast 'type 3 trt ss' trt 1 0 -1 0,trt 0 1 -1;
ESTM(t(c(1,0,-1,0,0,0,0)),y~trt+block,df_analisis)
##### using r
means <- emmeans(model , specs = ~ trt)
contr <- list("tr1-tr2 vs tr3" = c(2, -1, -1),
"trt2 vs tr1-tr3" = c(-1, 2, -1))
contrast(means, method = contr)
contrast(means, method = contr)
#### Result of the analysis of variance in the binomial model
model2 <- model <-glm(y2~trt+block,family = "binomial"(link = "logit"),data = df_analisis)
summary(model2)
emm_model2<-emmeans(model2,~trt)
emm_model2
contr <- list("tr1-tr2 " = c(1,-1,-1),
"trt2 vs tr3" = c(0, 1, -1))
emm<- contrast(emm_model2, method = contr,type="response")
confint(emm, adjust = "sidak", level = 0.95)
model_2_block <- emmeans(model2,~block)
contr_blk <- list("block1-block3" = c(1,0,-1),
"block2-block3" = c(0,1,-1))
emm_blk<- contrast(model_2_block, method = contr_blk,type="response" )
confint(emm_blk, adjust = "sidak", level = 0.05)
emm_blk<- contrast(model_2_block, method = contr_blk,type="response" )
confint(emm_blk, adjust = "sidak", level = 0.05)
emm<- contrast(emm_model2, method = contr,type="response")
confint(emm, adjust = "sidak", level = 0.95)
contr_2 <- list("tr1 vs tr2y3" = c(2, -1, -1),
"tr1 vs tr2" = c(1, -1, 0),
"trt1 vs tr2" = c(1, 0, -1),
"tr2 vs tr3"= c(0,1,-1))
contrast(emm_model2, method = contr_2,type = "reponse")
emm_blk<- contrast(model_2_block, method = contr_blk,type="response" )
emm
#### Result of the analysis of variance in the binomial model
model2 <- model <-glm(y2~trt+block,family = "binomial",data = df_analisis)
summary(model2)
emm_model2<-emmeans(model2,~trt)
emm_model2
##### using r
means <- emmeans(model , specs = ~ trt)
contr_2
contrast(emm_model2, method = contr_2,type = "reponse")
cld(emm, alpha = 0.05, Letters = LETTERS)
